module Cau_1(SW,CLOCK_50,HEX0,HEX1);
	input [0:0]SW;
	input CLOCK_50;
	output [0:6]HEX0,HEX1;
	wire [3:0]a,b;
	counter(CLOCK_50,SW[0],a,b);
	Decoder(a,HEX0);
	Decoder(b,HEX1);
endmodule

module counter(clock,dem,BCD0,BCD1);
	input clock,dem;
	output reg[3:0]BCD0,BCD1;
	reg [25:0]count;
	//tao delay 1s
	always @(posedge clock)
		begin
			if(count==49999999)
				count<=0;
			else
			count=count+1;
		end
	always@(posedge clock)
			begin
				if(dem==0)
					begin
						if(BCD0==8)
							begin
								if(BCD1==9)
									begin
										BCD1<=0;
										BCD0<=0;
									end
								else
									begin
										BCD1<=BCD1 + 1;
										BCD0<=0;
									end
							end
						else
							BCD0<=BCD0 + 2;
					end
				else if(dem==1)
					begin
						if(BCD0==9)
							begin
								if(BCD1==9)
									begin
										BCD1<=0;
										BCD0<=1;
									end
								else
									begin
										BCD1<=BCD1 + 1;
										BCD0<=1;
									end
							end
						else
							BCD0<=BCD0 + 2;
					end
			end
endmodule

module Decoder(c,hex);
input [3:0]c;
output reg [6:0]hex;
always@(c)
	case(c)
		4'b0000 :hex =7'b1000000;
		4'b0001 :hex =7'b1111001;
		4'b0010 :hex =7'b0100100;
		4'b0011 :hex =7'b0110000;
		4'b0100 :hex =7'b0011001;
		4'b0101 :hex =7'b0010010;
		4'b0110 :hex =7'b0000010;
		4'b0111 :hex =7'b1111000;
		4'b1000 :hex =7'b0000000;
		4'b1001 :hex =7'b0010000;
		default :hex =7'b1111111;
	endcase
endmodule
